$schema: 'https://moonrepo.dev/schemas/project.json'

id: cli
type: tool
language: typescript
stack: systems
platform: node
tags:
  - node
  - cli

dependsOn:
  - configs

fileGroups:
  src:
    - 'src/**/*'
    - 'tsconfig.app.json'
    - 'package.json'
  tests:
    - 'tests/**/*'
    - 'jest.config.ts'
    - 'tsconfig.spec.json'

tasks:
  # Builds the Application.
  build:
    command: 'pnpm build'
    description: 'Builds the application'
    type: build
    inputs:
      - '@group(src)'
    outputs:
      - 'dist/**/*'
    deps:
      - 'configs:build'
      - 'lint'
      - 'format-check'
      - 'test'
    options:
      runDepsInParallel: false

  # Runs the CLI in development mode.
  dev:
    command: 'pnpm dev'
    description: 'Runs the CLI in development mode'
    type: run
    options:
      runInCI: false
    inputs:
      - '@group(src)'

  # Starting the CLI in production mode from built files.
  start:
    command: 'pnpm start'
    description: 'Start the CLI in production mode from built files'
    type: run
    options:
      runInCI: false
    deps:
      - 'build'

  # Checks code quality using ESLint.
  lint:
    command: 'pnpm lint'
    description: 'Checks code quality using ESLint'
    type: run
    inputs:
      - '@group(src)'
      - '@group(tests)'
      - 'eslint.config.mjs'

  # Runs unit tests.
  test:
    command: 'pnpm test'
    description: 'Runs unit tests'
    type: test
    options:
      runInCI: affected
    inputs:
      - '@group(src)'
      - '@group(tests)'
    outputs:
      - 'coverage/**/*'

  # Runs unit tests in watch mode.
  test-watch:
    command: 'pnpm test-watch'
    description: 'Runs unit tests in watch mode'
    options:
      runInCI: false
    type: test
    inputs:
      - '@group(src)'
      - '@group(tests)'
    outputs:
      - 'coverage/**/*'

  # Runs unit tests with coverage.
  test-cov:
    command: 'pnpm test-cov'
    description: 'Runs unit tests with coverage'
    type: test
    options:
      runInCI: false
    inputs:
      - '@group(src)'
      - '@group(tests)'
    outputs:
      - 'coverage/**/*'

  # Formats the code using Prettier.
  format:
    command: 'pnpm format'
    description: 'Formats the code using Prettier'
    type: run
    options:
      runInCI: false
    inputs:
      - '@group(src)'
      - '@group(tests)'
      - 'prettier.config.mjs'
      - '.prettierignore'

  # Checks formatting using Prettier.
  format-check:
    command: 'pnpm format-check'
    description: 'Checks formatting using Prettier'
    type: run
    options:
      runInCI: affected
    inputs:
      - '@group(src)'
      - '@group(tests)'
      - 'prettier.config.mjs'
      - '.prettierignore'
